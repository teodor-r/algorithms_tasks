# пример вычисления числа фибоначи
# суть динамического программирования - свести задачу от рекурсивного метода
# решения к использованию цикла. То-есть вычисление промежуточных значений 
# не теряется, а сохраняется в массиве по мере продолжения программы
def fib(n):
	if n<=1:
		return n
	return (fib(n-1)+fib(n-2))

# в таком случае получается фибоначиевое дерево, при котором
# одни и те же числа вычисляются несколько раз, поэтому 
# O(Fib(n)) , а Fib(n) - экспоненциально - ОЧЕНЬ ДОЛГО!
# поэтому на этапе вычисления числа фиббоначи необходимо
# запоминать уже вычисленные в массив 
#
fib = [0,1] + [0]*(n-1)# и есть динам. программирование
for i in range (2,n+1):
	fib[i] = fib[i-1]+fib[i-2] 